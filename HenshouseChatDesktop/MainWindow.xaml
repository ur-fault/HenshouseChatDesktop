<Window x:Class="HenshouseChatDesktop.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:ulocal="clr-namespace:HenshouseChatDesktop.View.UserControls"
        xmlns:vm="clr-namespace:HenshouseChatDesktop.ViewModels"
        xmlns:svgc="http://sharpvectors.codeplex.com/svgc/"
        mc:Ignorable="d"
        Title="Henshouse Chat" Height="450" Width="1071" MinHeight="663"
        FontFamily="Noto Sans" Background="{StaticResource Grey5}">

    <Window.DataContext>
        <vm:ClientViewModel />
    </Window.DataContext>

    <Window.Resources>
        <Style x:Key="StatusButton" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="11.5">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush" Value="Black" />
            <Setter Property="BorderThickness" Value="3" />
            <Setter Property="Background" Value="{StaticResource Grey5}" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource Grey3}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{Binding BorderBrush, ElementName=StatusButton}" />
                </Trigger>

                <DataTrigger Binding="{Binding Status, RelativeSource={RelativeSource AncestorType=Window}}"
                             Value="Connecting">
                    <Setter Property="BorderBrush" Value="{StaticResource Yellow}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Status, RelativeSource={RelativeSource AncestorType=Window}}"
                             Value="Connected">
                    <Setter Property="BorderBrush" Value="{StaticResource Green}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Status, RelativeSource={RelativeSource AncestorType=Window}}"
                             Value="Error">
                    <Setter Property="BorderBrush" Value="{StaticResource Red}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="SendButton" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource Grey3}" />
            <Setter Property="Width" Value="32" />
            <Setter Property="Height" Value="32" />
            <Setter Property="Foreground" Value="{StaticResource Light}"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border BorderThickness="0" Background="{TemplateBinding Background}" CornerRadius="10">
                            <Border.Effect>
                                <DropShadowEffect Direction="270" BlurRadius="4" Opacity="0.25"></DropShadowEffect>
                            </Border.Effect>
                            <svgc:SvgIcon UriSource="Resources/send.svg" Width="16" Height="16"
                                          Fill="{TemplateBinding Foreground}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger
                    Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=SendButtonState}"
                    Value="Disabled">
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="{StaticResource Red}" />
                    <Setter Property="Background" Value="{StaticResource Grey4}" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource Grey2}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource Yellow}" />
                    <Setter Property="Width" Value="34" />
                    <Setter Property="Height" Value="34" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>


    <Grid MaxWidth="1500">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"></ColumnDefinition>
            <ColumnDefinition Width="5*" MinWidth="600"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
        </Grid.ColumnDefinitions>

        <Rectangle Name="LeftColumnMarker" />

        <Grid Grid.Row="0" Grid.Column="1">
            <Border BorderThickness="1" BorderBrush="Black" CornerRadius="15" Margin="0 18 0 0"
                    Background="#323031" Height="42" Effect="{StaticResource ShadowEffect}">

                <Grid Margin="4 3" HorizontalAlignment="Stretch" Name="ConnectionInfoView">
                    <Grid.DataContext>
                        <vm:ServerConnectionInfoViewModel />
                    </Grid.DataContext>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <ulocal:ValidatedIconedTextBox x:Name="NicknameTextBox" Grid.Column="0" Width="189"
                                                   Text="{Binding DataContext.Nickname, FallbackValue='ur-fault', RelativeSource={RelativeSource AncestorType=Window}, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
                                                   WatermarkText="Enter nickname" />
                    <ulocal:ValidatedTextBox x:Name="DomainTextBox" Grid.Column="2" Width="189"
                                             Text="{Binding Domain, FallbackValue='192.168.1.248', UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                             TextAlignment="Right" WatermarkText="Enter domain" />

                    <Rectangle Grid.Column="3" RadiusX="1" RadiusY="1" Width="2" Height="17" Margin="7 0 7 0"
                               Fill="{StaticResource Light}" />

                    <ulocal:ValidatedTextBox x:Name="PortTextBox" Grid.Column="4" Width="70"
                                             Text="{Binding Port, FallbackValue='25017', UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                             TextAlignment="Left" WatermarkText="Port" />
                    <Button Name="StatusButton" Grid.Column="5" Width="23" Height="23"
                            Style="{StaticResource StatusButton}" Click="StatusButton_Click" Margin="5 0 9 0" />
                </Grid>
            </Border>
        </Grid>
        <Grid Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" VerticalAlignment="Bottom">
            <ListView Name="MessagesListView" ItemsSource="{Binding Messages}" d:ItemsSource="{d:SampleData}"
                      Background="#00000000"
                      BorderThickness="0" ScrollViewer.CanContentScroll="True" VirtualizingPanel.ScrollUnit="Pixel"
                      Margin="0 5" ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                      ScrollViewer.VerticalScrollBarVisibility="Hidden">
                <ListView.Template>
                    <ControlTemplate>
                        <ScrollViewer>
                            <ItemsPresenter />
                        </ScrollViewer>
                    </ControlTemplate>
                </ListView.Template>
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="Focusable" Value="False" />
                        <Setter Property="IsEnabled" Value="False" />
                        <Setter Property="Margin" Value="0" />
                        <Setter Property="Padding" Value="0" />
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <DataTemplate.Resources>
                            <Style x:Key="AuthorBorderStyle" TargetType="Border">
                                <Setter Property="CornerRadius" Value="15 0 15 15" />
                                <Setter Property="BorderThickness" Value="1" />
                                <Setter Property="BorderBrush" Value="{StaticResource Grey4}" />
                                <Setter Property="Margin" Value="17 5" />
                                <Setter Property="HorizontalAlignment" Value="Right" />
                                <Setter Property="Effect" Value="{StaticResource ShadowEffect}" />
                                <Setter Property="VerticalAlignment" Value="Top" />
                                <Setter Property="Padding" Value="6 6"></Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsMine}" Value="True">
                                        <Setter Property="CornerRadius" Value="15 15 0 15" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                            <Style x:Key="AuthorTextStyle" TargetType="TextBlock">
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="HorizontalAlignment" Value="Right" />
                                <Setter Property="Padding" Value="14 0" />
                                <Setter Property="FontSize" Value="14" />
                                <Setter Property="FontWeight" Value="Bold" />
                                <Setter Property="Foreground" Value="{StaticResource Light}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsMine}" Value="True">
                                        <Setter Property="Foreground" Value="{StaticResource Green}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>

                            <Style x:Key="ContentBorderStyle" TargetType="Border">
                                <Setter Property="Background" Value="{StaticResource Grey4}" />
                                <Setter Property="Padding" Value="14 6" />
                                <Setter Property="CornerRadius" Value="0 15 15 15" />
                                <Setter Property="BorderThickness" Value="1" />
                                <Setter Property="BorderBrush" Value="Black" />
                                <Setter Property="Margin" Value="0 5" />
                                <Setter Property="Effect" Value="{StaticResource ShadowEffect}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsMine}" Value="True">
                                        <Setter Property="Background" Value="{StaticResource Green}" />
                                        <Setter Property="CornerRadius" Value="15 15 15 0" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                            <Style x:Key="ContentTextStyle" TargetType="TextBlock">
                                <Setter Property="FontSize" Value="16" />
                                <Setter Property="Foreground" Value="{StaticResource Light}" />
                                <Setter Property="TextWrapping" Value="Wrap"></Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsMine}" Value="True">
                                        <Setter Property="Background" Value="{StaticResource Green}" />
                                        <Setter Property="Foreground" Value="{StaticResource Grey5}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataTemplate.Resources>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="{Binding ElementName=LeftColumnMarker, Path=ActualWidth}" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Border Grid.Column="0" Focusable="False" Style="{StaticResource AuthorBorderStyle}">
                                <TextBlock Text="{Binding Author}" Style="{StaticResource AuthorTextStyle}" />
                            </Border>
                            <Border Grid.Column="1" Style="{StaticResource ContentBorderStyle}" Focusable="False">
                                <TextBlock Text="{Binding MessageContent}"
                                           Style="{StaticResource ContentTextStyle}"
                                           Name="ContentText" />
                            </Border>
                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </Grid>
        <Border Grid.Row="2" Grid.Column="1" Background="{StaticResource Grey4}" Height="42" CornerRadius="15"
                BorderThickness="1" BorderBrush="Black" Margin="0 0 0 18" Effect="{StaticResource ShadowEffect}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <TextBlock Text="Enter message here" VerticalAlignment="Center" Foreground="{StaticResource Light}"
                           FontSize="12" Opacity="0.5" Margin="23 0 0 0"
                           Visibility="{Binding WatermarkVisibility, RelativeSource={RelativeSource AncestorType=Window}}" />
                <TextBox Name="MessageTextBox" Grid.Column="0" Background="#00000000" Margin="20 0"
                         Text="{Binding CurrentMessage, UpdateSourceTrigger=PropertyChanged}"
                         VerticalContentAlignment="Center"
                         FontSize="14" Foreground="{StaticResource Light}" BorderThickness="0"
                         KeyDown="MessageTextBox_OnKeyDown" />
                <Grid Grid.Column="1" Width="36" Height="36" Margin="0 0 3 0">
                    <Button Name="SendButton" Style="{StaticResource SendButton}" Click="SendButton_OnClick" />
                </Grid>
            </Grid>
        </Border>
    </Grid>
</Window>